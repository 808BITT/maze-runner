{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mbobbitt\\\\Hyde\\\\maze-runner\\\\client\\\\src\\\\components\\\\game\\\\SinglePlayerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './SinglePlayerGame.css';\n\n// Import game utilities\nimport { renderFogOfWar, renderMaze, renderPlayer } from '../../utils/gameRenderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePlayerGame = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [gameState, setGameState] = useState(null);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [showDifficultyMenu, setShowDifficultyMenu] = useState(true);\n  const [error, setError] = useState(null);\n  const socketRef = useRef();\n  const canvasRef = useRef();\n  const fogCanvasRef = useRef();\n\n  // Handle difficulty selection and start game\n  const startGame = selectedDifficulty => {\n    setDifficulty(selectedDifficulty);\n    setShowDifficultyMenu(false);\n    setLoading(true);\n\n    // Connect to server via Socket.io\n    socketRef.current = io();\n\n    // Request new game with selected difficulty\n    socketRef.current.emit('joinGame', {\n      userId: 'player-' + Date.now(),\n      // Temporary user ID for now\n      difficulty: selectedDifficulty\n    });\n\n    // Handle game initialization response\n    socketRef.current.on('gameInitialized', initialState => {\n      setGameState(initialState);\n      setLoading(false);\n    });\n\n    // Handle game state updates\n    socketRef.current.on('gameStateUpdate', updatedState => {\n      setGameState(updatedState);\n\n      // Check if game is completed\n      if (updatedState.status === 'completed') {\n        socketRef.current.emit('completeGame', {\n          userId: updatedState.userId,\n          gameState: updatedState\n        });\n      }\n    });\n\n    // Handle game completion\n    socketRef.current.on('gameCompleted', results => {\n      // Navigate to game over screen with results\n      navigate('/gameover', {\n        state: {\n          results\n        }\n      });\n    });\n\n    // Handle errors\n    socketRef.current.on('error', errorData => {\n      setError(errorData.message);\n    });\n  };\n\n  // Handle keyboard inputs for player movement\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (!gameState || gameState.status !== 'active') return;\n      let direction;\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'w':\n          direction = 'up';\n          break;\n        case 'ArrowRight':\n        case 'd':\n          direction = 'right';\n          break;\n        case 'ArrowDown':\n        case 's':\n          direction = 'down';\n          break;\n        case 'ArrowLeft':\n        case 'a':\n          direction = 'left';\n          break;\n        default:\n          return;\n      }\n\n      // Send movement to server\n      socketRef.current.emit('movePlayer', {\n        userId: gameState.userId,\n        direction\n      });\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [gameState]);\n\n  // Render maze, fog, and player when game state updates\n  useEffect(() => {\n    if (!gameState) return;\n    const mazeCanvas = canvasRef.current;\n    const fogCanvas = fogCanvasRef.current;\n    if (!mazeCanvas || !fogCanvas) return;\n    const mazeCtx = mazeCanvas.getContext('2d');\n    const fogCtx = fogCanvas.getContext('2d');\n\n    // Clear canvases\n    mazeCtx.clearRect(0, 0, mazeCanvas.width, mazeCanvas.height);\n    fogCtx.clearRect(0, 0, fogCanvas.width, fogCanvas.height);\n\n    // Render maze background\n    renderMaze(mazeCtx, gameState.maze);\n\n    // Render fog of war overlay\n    renderFogOfWar(fogCtx, gameState.fogGrid);\n\n    // Render player\n    renderPlayer(mazeCtx, gameState.playerPosition, gameState.maze);\n  }, [gameState]);\n\n  // Clean up socket connection when component unmounts\n  useEffect(() => {\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n\n  // Handle return to main menu\n  const exitToMainMenu = () => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    navigate('/');\n  };\n\n  // Render difficulty selection menu\n  if (showDifficultyMenu) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"difficulty-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Difficulty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"difficulty-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startGame('easy'),\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startGame('medium'),\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startGame('hard'),\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: exitToMainMenu,\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Show loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generating Maze...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Show error message if there's an error\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exitToMainMenu,\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-hud\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Fog Remaining:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [gameState === null || gameState === void 0 ? void 0 : gameState.fogPercentage.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (gameState === null || gameState === void 0 ? void 0 : gameState.steps) || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [Math.floor((Date.now() - (gameState === null || gameState === void 0 ? void 0 : gameState.startTime)) / 1000), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: exitToMainMenu,\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: (gameState === null || gameState === void 0 ? void 0 : gameState.maze.width) * 20,\n        height: (gameState === null || gameState === void 0 ? void 0 : gameState.maze.height) * 20,\n        className: \"maze-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: fogCanvasRef,\n        width: (gameState === null || gameState === void 0 ? void 0 : gameState.maze.width) * 20,\n        height: (gameState === null || gameState === void 0 ? void 0 : gameState.maze.height) * 20,\n        className: \"fog-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minimap-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Minimap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"minimap\",\n        children: gameState === null || gameState === void 0 ? void 0 : gameState.maze.grid.map((row, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"minimap-row\",\n          children: row.map((cell, x) => {\n            // Define cell type\n            let cellType = '';\n            if (cell === 1) cellType = 'wall';else if (cell === 2) cellType = 'start';else if (cell === 3) cellType = 'exit';else cellType = 'path';\n\n            // Add player marker\n            const isPlayer = gameState.playerPosition.x === x && gameState.playerPosition.y === y;\n\n            // Add fog\n            const isFogged = gameState.fogGrid[y][x] === 1;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `minimap-cell ${cellType} ${isPlayer ? 'player' : ''} ${isFogged ? 'fogged' : ''}`\n            }, `cell-${x}-${y}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this);\n          })\n        }, `row-${y}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-help\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use WASD or Arrow keys to move\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n_s(SinglePlayerGame, \"myxgNQn+P9VZrBf0/CB+Ag7Bweo=\", false, function () {\n  return [useNavigate];\n});\n_c = SinglePlayerGame;\nexport default SinglePlayerGame;\nvar _c;\n$RefreshReg$(_c, \"SinglePlayerGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","io","renderFogOfWar","renderMaze","renderPlayer","jsxDEV","_jsxDEV","SinglePlayerGame","_s","navigate","loading","setLoading","gameState","setGameState","difficulty","setDifficulty","showDifficultyMenu","setShowDifficultyMenu","error","setError","socketRef","canvasRef","fogCanvasRef","startGame","selectedDifficulty","current","emit","userId","Date","now","on","initialState","updatedState","status","results","state","errorData","message","handleKeyDown","e","direction","key","window","addEventListener","removeEventListener","mazeCanvas","fogCanvas","mazeCtx","getContext","fogCtx","clearRect","width","height","maze","fogGrid","playerPosition","disconnect","exitToMainMenu","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fogPercentage","toFixed","steps","Math","floor","startTime","ref","grid","map","row","y","cell","x","cellType","isPlayer","isFogged","_c","$RefreshReg$"],"sources":["C:/Users/mbobbitt/Hyde/maze-runner/client/src/components/game/SinglePlayerGame.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport './SinglePlayerGame.css';\r\n\r\n// Import game utilities\r\nimport { renderFogOfWar, renderMaze, renderPlayer } from '../../utils/gameRenderer';\r\n\r\nconst SinglePlayerGame = () => {\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(true);\r\n    const [gameState, setGameState] = useState(null);\r\n    const [difficulty, setDifficulty] = useState('medium');\r\n    const [showDifficultyMenu, setShowDifficultyMenu] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const socketRef = useRef();\r\n    const canvasRef = useRef();\r\n    const fogCanvasRef = useRef();\r\n\r\n    // Handle difficulty selection and start game\r\n    const startGame = (selectedDifficulty) => {\r\n        setDifficulty(selectedDifficulty);\r\n        setShowDifficultyMenu(false);\r\n        setLoading(true);\r\n\r\n        // Connect to server via Socket.io\r\n        socketRef.current = io();\r\n\r\n        // Request new game with selected difficulty\r\n        socketRef.current.emit('joinGame', {\r\n            userId: 'player-' + Date.now(), // Temporary user ID for now\r\n            difficulty: selectedDifficulty\r\n        });\r\n\r\n        // Handle game initialization response\r\n        socketRef.current.on('gameInitialized', (initialState) => {\r\n            setGameState(initialState);\r\n            setLoading(false);\r\n        });\r\n\r\n        // Handle game state updates\r\n        socketRef.current.on('gameStateUpdate', (updatedState) => {\r\n            setGameState(updatedState);\r\n\r\n            // Check if game is completed\r\n            if (updatedState.status === 'completed') {\r\n                socketRef.current.emit('completeGame', {\r\n                    userId: updatedState.userId,\r\n                    gameState: updatedState\r\n                });\r\n            }\r\n        });\r\n\r\n        // Handle game completion\r\n        socketRef.current.on('gameCompleted', (results) => {\r\n            // Navigate to game over screen with results\r\n            navigate('/gameover', { state: { results } });\r\n        });\r\n\r\n        // Handle errors\r\n        socketRef.current.on('error', (errorData) => {\r\n            setError(errorData.message);\r\n        });\r\n    };\r\n\r\n    // Handle keyboard inputs for player movement\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            if (!gameState || gameState.status !== 'active') return;\r\n\r\n            let direction;\r\n            switch (e.key) {\r\n                case 'ArrowUp':\r\n                case 'w':\r\n                    direction = 'up';\r\n                    break;\r\n                case 'ArrowRight':\r\n                case 'd':\r\n                    direction = 'right';\r\n                    break;\r\n                case 'ArrowDown':\r\n                case 's':\r\n                    direction = 'down';\r\n                    break;\r\n                case 'ArrowLeft':\r\n                case 'a':\r\n                    direction = 'left';\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            // Send movement to server\r\n            socketRef.current.emit('movePlayer', {\r\n                userId: gameState.userId,\r\n                direction\r\n            });\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [gameState]);\r\n\r\n    // Render maze, fog, and player when game state updates\r\n    useEffect(() => {\r\n        if (!gameState) return;\r\n\r\n        const mazeCanvas = canvasRef.current;\r\n        const fogCanvas = fogCanvasRef.current;\r\n\r\n        if (!mazeCanvas || !fogCanvas) return;\r\n\r\n        const mazeCtx = mazeCanvas.getContext('2d');\r\n        const fogCtx = fogCanvas.getContext('2d');\r\n\r\n        // Clear canvases\r\n        mazeCtx.clearRect(0, 0, mazeCanvas.width, mazeCanvas.height);\r\n        fogCtx.clearRect(0, 0, fogCanvas.width, fogCanvas.height);\r\n\r\n        // Render maze background\r\n        renderMaze(mazeCtx, gameState.maze);\r\n\r\n        // Render fog of war overlay\r\n        renderFogOfWar(fogCtx, gameState.fogGrid);\r\n\r\n        // Render player\r\n        renderPlayer(mazeCtx, gameState.playerPosition, gameState.maze);\r\n\r\n    }, [gameState]);\r\n\r\n    // Clean up socket connection when component unmounts\r\n    useEffect(() => {\r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Handle return to main menu\r\n    const exitToMainMenu = () => {\r\n        if (socketRef.current) {\r\n            socketRef.current.disconnect();\r\n        }\r\n        navigate('/');\r\n    };\r\n\r\n    // Render difficulty selection menu\r\n    if (showDifficultyMenu) {\r\n        return (\r\n            <div className=\"difficulty-menu\">\r\n                <h2>Select Difficulty</h2>\r\n                <div className=\"difficulty-buttons\">\r\n                    <button onClick={() => startGame('easy')}>Easy</button>\r\n                    <button onClick={() => startGame('medium')}>Medium</button>\r\n                    <button onClick={() => startGame('hard')}>Hard</button>\r\n                </div>\r\n                <button className=\"back-button\" onClick={exitToMainMenu}>Back to Menu</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show loading state\r\n    if (loading) {\r\n        return (\r\n            <div className=\"loading-screen\">\r\n                <h2>Generating Maze...</h2>\r\n                <div className=\"spinner\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show error message if there's an error\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-screen\">\r\n                <h2>Error</h2>\r\n                <p>{error}</p>\r\n                <button onClick={exitToMainMenu}>Back to Menu</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            {/* Game HUD */}\r\n            <div className=\"game-hud\">\r\n                <div className=\"stats\">\r\n                    <div className=\"stat\">\r\n                        <span>Fog Remaining:</span>\r\n                        <span>{gameState?.fogPercentage.toFixed(2)}%</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                        <span>Steps:</span>\r\n                        <span>{gameState?.steps || 0}</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                        <span>Time:</span>\r\n                        <span>{Math.floor((Date.now() - gameState?.startTime) / 1000)}s</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"exit-button\" onClick={exitToMainMenu}>Exit</button>\r\n            </div>\r\n\r\n            {/* Game Canvas */}\r\n            <div className=\"canvas-container\">\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    width={gameState?.maze.width * 20}\r\n                    height={gameState?.maze.height * 20}\r\n                    className=\"maze-canvas\"\r\n                />\r\n                <canvas\r\n                    ref={fogCanvasRef}\r\n                    width={gameState?.maze.width * 20}\r\n                    height={gameState?.maze.height * 20}\r\n                    className=\"fog-canvas\"\r\n                />\r\n            </div>\r\n\r\n            {/* Mini-map with fog of war */}\r\n            <div className=\"minimap-container\">\r\n                <h3>Minimap</h3>\r\n                <div className=\"minimap\">\r\n                    {gameState?.maze.grid.map((row, y) => (\r\n                        <div key={`row-${y}`} className=\"minimap-row\">\r\n                            {row.map((cell, x) => {\r\n                                // Define cell type\r\n                                let cellType = '';\r\n                                if (cell === 1) cellType = 'wall';\r\n                                else if (cell === 2) cellType = 'start';\r\n                                else if (cell === 3) cellType = 'exit';\r\n                                else cellType = 'path';\r\n\r\n                                // Add player marker\r\n                                const isPlayer = gameState.playerPosition.x === x && gameState.playerPosition.y === y;\r\n\r\n                                // Add fog\r\n                                const isFogged = gameState.fogGrid[y][x] === 1;\r\n\r\n                                return (\r\n                                    <div\r\n                                        key={`cell-${x}-${y}`}\r\n                                        className={`minimap-cell ${cellType} ${isPlayer ? 'player' : ''} ${isFogged ? 'fogged' : ''}`}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Controls help */}\r\n            <div className=\"controls-help\">\r\n                <p>Use WASD or Arrow keys to move</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SinglePlayerGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}